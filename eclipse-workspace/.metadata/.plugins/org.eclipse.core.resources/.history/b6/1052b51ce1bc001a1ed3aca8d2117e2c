package com.proyectocsi.api.rest.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.proyectocsi.api.rest.models.entity.Profesor;
import com.proyectocsi.api.rest.models.services.IProfesorService;

@CrossOrigin(origins = {"http://localhost:4200"})
@RestController
@RequestMapping("/api")
public class ProfesorController {
	
	@Autowired
	private IProfesorService profesorService;
	
	@GetMapping("/maestros")
	public List<Profesor> index(){
		return profesorService.findAll();
	}
	
	@GetMapping("/maestro/{id}")
	public Profesor show(@PathVariable Long id) {
		return this.profesorService.findById(id);
	}
	
	@PostMapping("/registra-maestro")
	@ResponseStatus(code = HttpStatus.CREATED)
	public Profesor create(@RequestBody Profesor profesor) {
		return this.profesorService.save(profesor);
	}
	
	@PutMapping("/modifica-maestro/{id}")
	@ResponseStatus(code = HttpStatus.CREATED)
	public Profesor update(@RequestBody Profesor profesor, @PathVariable Long id) {
		Profesor profesorActual = this.profesorService.findById(id);
		
		profesorActual.setNumeroEmpleado(profesor.getNumeroEmpleado());
		profesorActual.getTipoProfesor().setId(profesor.getTipoProfesor().getId());
		profesorActual.getUsuario().setApellidoMaterno(profesor.getUsuario().getApellidoMaterno());
		profesorActual.getUsuario().setApellidoPaterno(profesor.getUsuario().getApellidoPaterno());
		profesorActual.getUsuario().setContrasenia(profesor.getUsuario().getContrasenia());
		profesorActual.getUsuario().setNombre(profesor.getUsuario().getNombre());
		profesorActual.getUsuario().setNombreUsuario(profesor.getUsuario().getNombreUsuario());
		
		return this.profesorService.save(profesorActual);
		
	}
	
	
	@DeleteMapping("/elimina-maestro/{id}")
	@ResponseStatus(code = HttpStatus.OK)
	public void delete(@PathVariable Long id) {
		this.profesorService.delete(id);
	}
}
